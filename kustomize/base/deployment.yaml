apiVersion: apps/v1
kind: Deployment
metadata:
  name: provisioner-personalmappe
  labels:
    io.kompose.service: provisioner-personalmappe
spec:
  selector:
    matchLabels:
      io.kompose.service: provisioner-personalmappe
  template:
    metadata:
      annotations:
        prometheus.io/path: actuator/prometheus
        prometheus.io/port: "8080"
        prometheus.io/scrape: "true"
      labels:
        io.kompose.service: provisioner-personalmappe
    spec:
      containers:
        - name: provisioner-personalmappe
          image: ghcr.io/fintlabs/fint-provisioner-personalmappe:latest
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /actuator/health/liveness
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          resources:
            limits: {memory: 5Gi, cpu: '4'}
            requests: {memory: 3Gi, cpu: 1024m}
          ports:
            - containerPort: 8080
          readinessProbe:
            initialDelaySeconds: 60
            timeoutSeconds: 10
            httpGet:
              port: 8080
              path: /actuator/health/readiness
          env:
            - {name: TZ, value: Europe/Oslo}
            - {name: JAVA_TOOL_OPTIONS, value: '-XX:+ExitOnOutOfMemoryError -Xmx3G -verbose:gc'}
            - {name: logging.level.no.fint, value: INFO}
            - {name: management.endpoints.web.exposure.include, value: "health,metrics,prometheus"}
            - {name: organisation.registration, value: asset}
